// Prefix all classes.
$pn-prefix: 'pn-';
$var-prefix: '--';

// Class namespaces.
$types: (
  utility:    'u-',
  object:     'o-',
  component:  'c-',
  theme:      't-',
  is:         'is-',
  has:        'has-'
);

// Construct a new component class.
@mixin class($type, $name) {
  .#{$var-prefix}#{map-get($types, $type)}#{$name} {
    @content;
  }
};

// Use library var.
@function v($var) {
  @return var(#{$var-prefix}#{$pn-prefix}#{$var});
};

// Generate a set of custom properties..
@mixin define-vars($vars: ()) {
  @each $name, $value in $vars {
    #{$var-prefix}#{$pn-prefix}#{$name}: $value;
  }
};

// Responsive
$media-types: (
  phone: '(max-width: 480px)',
  tablet-portrait: '(max-width: 767px)',
  tablet-landscape-desktop: '(min-width: 768px) and (max-width: 979px)',
  large-desktop: '(min-width: 1200px)',
  non-retina: 'screen and (-webkit-max-device-pixel-ratio: 1)',
  retina: 'screen and (-webkit-min-device-pixel-ratio: 2)',
);

// Target media
@mixin media($media) {
    @if not map-contains($media-types, $media) {
      $media: large-desktop;
    }
    @media #{map-get($media-types, $media)} {
        @content;
    }
}
